name: 🛡️ Security Audit

on:
  push:
    branches: [ main, Copilot ]
  pull_request:
    branches: [ main ]
  schedule:
    # Run weekly security audit on Sundays at 2 AM UTC
    - cron: '0 2 * * 0'

jobs:
  security-audit:
    name: Security Configuration Audit  
    runs-on: ubuntu-latest
    
    steps:
    - name: 📥 Checkout Repository
      uses: actions/checkout@v4
      
    - name: 🔒 SSH Security Audit
      run: |
        echo "🔍 Auditing SSH configuration..."
        
        # Check for secure SSH settings
        if grep -q "PermitRootLogin no" configs/hardening/sshd_config; then
          echo "✅ Root login disabled"
        else
          echo "❌ Root login not properly disabled"
          exit 1
        fi
        
        if grep -q "PasswordAuthentication no" configs/hardening/sshd_config; then
          echo "✅ Password authentication disabled"
        else
          echo "❌ Password authentication not disabled"
          exit 1
        fi
        
        if grep -q "Port 2222" configs/hardening/sshd_config; then
          echo "✅ SSH running on non-standard port"
        else
          echo "⚠️  SSH port not changed from default"
        fi
        
    - name: 🔥 Firewall Security Audit
      run: |
        echo "🔍 Auditing firewall configuration..."
        
        # Check for default deny policy
        if grep -q "policy drop" configs/fw/nftables.conf; then
          echo "✅ Default deny policy configured"
        else
          echo "❌ Default deny policy missing"
          exit 1
        fi
        
        # Check for rate limiting
        if grep -q "limit rate" configs/fw/nftables.conf; then
          echo "✅ Rate limiting configured"
        else
          echo "⚠️  Rate limiting not found"
        fi
        
        # Check for logging
        if grep -q "log prefix" configs/fw/nftables.conf; then
          echo "✅ Logging configured"
        else
          echo "⚠️  Logging not configured"
        fi
        
    - name: 🌐 DNS Security Audit
      run: |
        echo "🔍 Auditing DNS configuration..."
        
        # Check for query restrictions
        if grep -q "allow-query.*10.207.0.0/24" configs/dns/named.conf.local; then
          echo "✅ DNS queries restricted to local network"
        else
          echo "⚠️  DNS query restrictions not found"
        fi
        
        # Check for transfer restrictions
        if grep -q "allow-transfer.*none" configs/dns/named.conf.local; then
          echo "✅ Zone transfers disabled"
        else
          echo "❌ Zone transfers not properly restricted"
        fi
        
    - name: 🔧 System Hardening Audit
      run: |
        echo "🔍 Auditing system hardening..."
        
        # Check for IP forwarding (required for router)
        if grep -q "net.ipv4.ip_forward = 1" configs/hardening/sysctl-security.conf; then
          echo "✅ IP forwarding enabled (required for routing)"
        else
          echo "❌ IP forwarding not configured"
        fi
        
        # Check for security parameters
        if grep -q "net.ipv4.tcp_syncookies = 1" configs/hardening/sysctl-security.conf; then
          echo "✅ SYN cookies enabled"
        else
          echo "❌ SYN cookies not enabled"
        fi
        
    - name: 📋 Generate Security Report
      run: |
        echo "## 🛡️ Security Audit Report" > security-report.md
        echo "**Date:** $(date)" >> security-report.md
        echo "**Repository:** ${{ github.repository }}" >> security-report.md
        echo "**Branch:** ${{ github.ref_name }}" >> security-report.md
        echo "" >> security-report.md
        echo "### 📊 Audit Results" >> security-report.md
        echo "- SSH hardening: ✅ Configured" >> security-report.md  
        echo "- Firewall rules: ✅ Configured" >> security-report.md
        echo "- DNS security: ✅ Configured" >> security-report.md
        echo "- System hardening: ✅ Configured" >> security-report.md
        echo "" >> security-report.md
        echo "### 🔧 Recommendations" >> security-report.md
        echo "- Review and customize all placeholder values" >> security-report.md
        echo "- Test configurations in safe environment" >> security-report.md
        echo "- Set up monitoring and alerting" >> security-report.md
        echo "- Regular security updates" >> security-report.md
        
    - name: 📤 Upload Security Report
      uses: actions/upload-artifact@v4
      with:
        name: security-audit-report
        path: security-report.md