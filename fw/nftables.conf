#!/usr/sbin/nft -f
# ----------------------------------------------
# Modern nftables ruleset for network-core-appliance
# Interface names: ens33 (WAN), ens37 (LAN)
# ----------------------------------------------

# Flush existing rules
flush ruleset

# Define variables for easier maintenance
define WAN_IF = ens33
define LAN_IF = ens37
define LAN_NET = 10.207.0.0/24
define APPLIANCE_IP = 10.207.0.250
define SSH_PORT = 2222

table inet filter {
    # Input chain - traffic destined for this appliance
    chain input {
        type filter hook input priority filter; policy drop;
        
        # Allow loopback traffic
        iifname "lo" accept
        
        # Allow established and related connections
        ct state established,related accept
        
        # Allow ICMP (ping) for network diagnostics
        ip protocol icmp accept
        
        # Allow SSH on custom port from LAN only (security hardening)
        iifname $LAN_IF tcp dport $SSH_PORT accept
        
        # Allow DNS queries from LAN
        iifname $LAN_IF udp dport 53 accept
        iifname $LAN_IF tcp dport 53 accept
        
        # Allow DHCP requests from LAN
        iifname $LAN_IF udp sport 68 udp dport 67 accept
        
        # Log and drop everything else
        log prefix "nft-input-drop: " drop
    }
    
    # Forward chain - traffic passing through the appliance
    chain forward {
        type filter hook forward priority filter; policy drop;
        
        # Allow established and related connections
        ct state established,related accept
        
        # Allow LAN to WAN traffic
        iifname $LAN_IF oifname $WAN_IF ip saddr $LAN_NET accept
        
        # Log and drop everything else
        log prefix "nft-forward-drop: " drop
    }
    
    # Output chain - traffic originating from this appliance
    chain output {
        type filter hook output priority filter; policy accept;
        # Allow all outbound traffic (can be restricted as needed)
    }
}

# NAT table for internet access
table inet nat {
    chain prerouting {
        type nat hook prerouting priority dstnat; policy accept;
        # Add port forwarding rules here if needed
        # Example: tcp dport 80 dnat to 10.207.0.100:80
    }
    
    chain postrouting {
        type nat hook postrouting priority srcnat; policy accept;
        
        # Masquerade LAN traffic to WAN (NAT)
        ip saddr $LAN_NET oifname $WAN_IF masquerade
    }
}

# Rate limiting to prevent abuse
table inet ratelimit {
    chain input {
        type filter hook input priority mangle; policy accept;
        
        # Rate limit SSH attempts (max 3 per minute)
        tcp dport $SSH_PORT limit rate 3/minute burst 3 packets accept
        tcp dport $SSH_PORT drop
        
        # Rate limit DNS queries (max 30 per second per IP)
        udp dport 53 limit rate 30/second burst 10 packets accept
        udp dport 53 drop
    }
}